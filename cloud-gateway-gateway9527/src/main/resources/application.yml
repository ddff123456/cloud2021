server:
  port: 9527

spring:
  application:
    name: cloud-gateway
  #############################新增网关配置###########################
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true #开启从注册中心动态创建路由的功能，利用微服务名进行路由（实现负载均衡的功能）
      routes:    # 下面配置了两个接口，意思就是说访问以下api之后，那么就会有一个网关挡在前面
        - id: payment_routh #payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名
          #uri: http://localhost:8001          #匹配后提供服务的路由地址’
          #这个是eureka注册的服务端的地址
          uri: lb://cloud-payment-service    #匹配后提供服务的路由地址 （与上面id为payment_routh2实现负载均衡功能）
          predicates:         # 访问的url如果满足predicates的规则，那么就执行跳转路由
            - Path=/get/**         # 断言，路径相匹配的进行路由 (这个是接口地址，如果下面有这个路径，就访问路由，反之则不访问)

        - id: payment_routh2    #payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名
          #uri: http://localhost:8001          #匹配后提供服务的路由地址
          ##这个是eureka注册的服务端的地址
          uri: lb://cloud-payment-service #匹配后提供服务的路由地址 （与上面id为payment_routh实现负载均衡功能）
          predicates:            # 访问的url如果满足predicates的规则，那么就执行跳转路由
            - Path=/payment/lb/**         # 断言，路径相匹配的进行路由
            - After=2021-08-06T22:06:57.100620700+08:00[Asia/Shanghai]   # 这个断言的意思是要在这个时间之后访问才会执行跳转路由
            #这里还有多种predicates:例如带或者不带cookie访问
            #说白了，Predicate就是为了实现一组匹配规则，让请求过来找到对应的Route进行处理。
####################################################################


eureka:
  instance:
    hostname: cloud-gateway-service
  client: #服务提供者provider注册进eureka服务列表内
    service-url:
      register-with-eureka: true
      fetch-registry: true
      # 集群版
      defaultZone: http://eureka7001.com:7001/eureka, http://eureka7002.com:7002/eureka
      # 单机版
      #defaultZone: http://eureka7001.com:7001/eureka
